plugins {
	id 'fabric-loom' version '0.10-SNAPSHOT'
	id 'maven-publish'
}

runClient {
	jvmArgs "--add-exports=java.desktop/sun.awt.image=ALL-UNNAMED"
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

dependencies {

	implementation 'net.daporkchop.lib:common:0.5.7-SNAPSHOT'
	include 'net.daporkchop.lib:common:0.5.7-SNAPSHOT'

	implementation 'com.fasterxml.jackson.core:jackson-databind:2.14.1'
	include 'com.fasterxml.jackson.core:jackson-databind:2.14.1'

	implementation 'com.fasterxml.jackson.core:jackson-annotations:2.14.1'
	include 'com.fasterxml.jackson.core:jackson-annotations:2.14.1'

	implementation 'com.fasterxml.jackson.core:jackson-core:2.14.1'
	include 'com.fasterxml.jackson.core:jackson-core:2.14.1'

	implementation 'com.github.SmylerMC:terraminusminus:5907790da3'
	include 'com.fasterxml.jackson.core:jackson-core:2.14.1'
	include 'com.github.SmylerMC:terraminusminus:5907790da3'



	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"



	// PSA: Some older mods, compiled on Loom 0.2.1, might have outdated Maven POMs.
	// You may need to force-disable transitiveness on them.
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// ensure that the encoding is set to UTF-8, no matter what the system default is
	// this fixes some edge cases with special characters not displaying correctly
	// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
	// If Javadoc is generated, this must be specified in that task too.
	it.options.encoding = "UTF-8"

	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	allprojects {
		repositories {
			// Add repositories to publish to here.
			// Notice: This block does NOT have the same function as the block in the top level.
			// The repositories here will be used for publishing your artifact, not for
			// retrieving dependencies.
			jcenter()
			maven {
				name = "OpenCollab Snapshots"
				url = "https://repo.opencollab.dev/snapshot/"
			}
			maven { url "https://jitpack.io" }
			maven {
				name = "sonatype"
				url = "https://oss.sonatype.org/content/groups/public/"
			}
			mavenCentral()
			maven {
				name = "Daporkchop_"
				url = "https://maven.daporkchop.net/"
			}
		}
	}
}

loom {
	accessWidenerPath = file("src/main/resources/uk121.accesswidener")
}